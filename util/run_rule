#!/usr/bin/env bash

# $1 = run project directory
# $2 = rule
# $3 = target
# $4 = working directory

skip=false

while IFS="" read -r pre_cmd <&3 || [[ -n "$pre_cmd" ]]
do
    special=false
    cmd=""

    for (( i=0; i < ${#pre_cmd}; i++ ))
    do
        ch=${pre_cmd:$i:1}
        if [[ "$special" == true ]]
        then
            case "$ch" in
                '%') cmd+=% ;;
                '^') cmd+="$4" ;;
                ':') cmd+="$1" ;;
                '1') cmd+="${5}" ;;
                '2') cmd+="${6}" ;;
                '3') cmd+="${7}" ;;
                '4') cmd+="${8}" ;;
                '5') cmd+="${9}" ;;
                '6') cmd+="${10}" ;;
                '7') cmd+="${11}" ;;
                '8') cmd+="${12}" ;;
                '9') cmd+="${13}" ;;
                '*') cmd+="${*:5}" ;;
                '@') cmd+=@ ;;
            esac 
            special=false
        else
            if [[ "$ch" == "@" ]]
            then
                special=true
            elif [[ "$ch" == "%" ]]
            then
                cmd+="$3"
            else
                cmd+="$ch"
            fi
        fi
    done

    cmd_type="${cmd:0:1}"

    if [[ "$cmd_type" == "$" ]]
    then
        mkdir -p "$1/dat"
        touch "$1/dat/obj"

        if [[ "$skip" == false ]] && ! grep -q "$obj" "$1/dat/obj"
        then
            printf "%s\n" "$obj" >> "$1/dat/obj"
        fi

        skip=false
    fi

    if [[ "$cmd_type" == "!" && "$skip" == false ]]
    then
        eval "${cmd:1}" || exit $?
    fi

    if [[ "$cmd_type" == ">" ]]
    then
        read -ra file_arr <<< "${cmd:1}"
        obj=${file_arr[0]}
        pre_array=${file_arr[*]:1}

        need_compile=false

        for pre in ${pre_array[*]}
        do
            if [[ ! -f "$pre" ]]
            then
                printf "Prestiquite '%s' does not exist.\n" "$pre"
                exit 1
            fi

            if [[ ! -f "$obj" || "$pre" -nt "$obj" ]]
            then
                need_compile=true
            fi
        done

        if [[ "$need_compile" == false ]]
        then
            skip=true
        fi
    fi
done 3< "$1/rule/$2"
